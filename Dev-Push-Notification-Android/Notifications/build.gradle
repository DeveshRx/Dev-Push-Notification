plugins {
    id 'com.android.library'
    id 'maven-publish'
}

group = 'com.github.DeveshRx'
version = '1.0.0'

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
  //  implementation project(path: ':App_Update')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Room Database
    def room_version = "+"
    api "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava2 support for Room
    api "androidx.room:room-rxjava2:$room_version"
    // optional - RxJava3 support for Room
    api "androidx.room:room-rxjava3:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    api "androidx.room:room-guava:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    // Work Manager
    def work_version = "+"

    // (Java only)
    api "androidx.work:work-runtime:$work_version"
    // Kotlin + coroutines
//    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - RxJava2 support
    api "androidx.work:work-rxjava2:$work_version"
    // optional - GCMNetworkManager support
    api "androidx.work:work-gcm:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"
    // optional - Multiprocess support
    api "androidx.work:work-multiprocess:$work_version"


    //Glide
    api 'com.github.bumptech.glide:glide:+'
    annotationProcessor 'com.github.bumptech.glide:compiler:+'

    api "androidx.browser:browser:+"
    //Recycleview decor
    implementation 'it.xabaras.android:recyclerview-swipedecorator:1.2.3'




    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    api 'com.google.firebase:firebase-messaging:+'
    api 'com.google.firebase:firebase-analytics:+'
    api 'com.google.firebase:firebase-messaging-directboot:+'

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'Dev-Push-Notification'
                description = 'Push Notification for Android'
                url = 'https://github.com/DeveshRx/Dev-Push-Notification'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/DeveshRx/Dev-Push-Notification/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'DeveshRx'
                        name = 'Devesh Chaudhari'
                        email = 'DeveshRx@users.noreply.github.com'
                    }
                }
                
            }
        }
    }
}



afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.DeveshRx'
                artifactId = 'Dev-Push-Notificaion'
                version = '1.0.0'
            }
        }
    }
}